
upstream django-backend {
	server ${DJANGO_HOST}:${DJANGO_PORT};
}

upstream pong-backend {
	server ${PONG_HOST}:8000;
}

upstream chat-backend {
	server ${CHAT_HOST}:8000;
}

upstream ntf-backend {
	server ${NTF_HOST}:8000;
}

# default server for FRONT_PORT
server {
	#listen ${FRONT_PORT} default_server;
	listen ${FRONT_PORT} default_server ssl;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /home/${USERNAME}/certs/transcendence.crt;
	ssl_certificate_key /home/${USERNAME}/certs/transcendence.key;

	return 444;
}

# default server for NGINX_PORT
server {
	#listen ${NGINX_PORT} default_server;
	listen ${NGINX_PORT} default_server ssl;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /home/${USERNAME}/certs/transcendence.crt;
	ssl_certificate_key /home/${USERNAME}/certs/transcendence.key;

	return 444;
}

# default server for PONG_PORT
server {
	#listen ${PONG_PORT} default_server;
	listen ${PONG_PORT} default_server ssl;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /home/${USERNAME}/certs/transcendence.crt;
	ssl_certificate_key /home/${USERNAME}/certs/transcendence.key;

	return 444;
}

# default server for CHAT_PORT
server {
	#listen ${CHAT_PORT} default_server;
	listen ${CHAT_PORT} default_server ssl;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /home/${USERNAME}/certs/transcendence.crt;
	ssl_certificate_key /home/${USERNAME}/certs/transcendence.key;

	return 444;
}

# default server for NTF_PORT
server {
	#listen ${NTF_PORT} default_server;
	listen ${NTF_PORT} default_server ssl;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /home/${USERNAME}/certs/transcendence.crt;
	ssl_certificate_key /home/${USERNAME}/certs/transcendence.key;

	return 444;
}

# server frontend
server {
	server_name ${FRONT_HOST} "localhost";
	#listen ${FRONT_PORT};
	listen ${FRONT_PORT} ssl;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /home/${USERNAME}/certs/transcendence.crt;
	ssl_certificate_key /home/${USERNAME}/certs/transcendence.key;

	root /home/${USERNAME}/frontend;

	index index.html;

	location / {
		root /home/${USERNAME}/frontend/static;

		#limit_except GET {
		#	deny all;
		#}
		try_files $uri /../index.html;
		autoindex off;
	}

	location = /favicon.ico {
		alias /home/${USERNAME}/frontend/static/imgs/favicon.jpeg;
	}
}

# server api-gateway (django)
server {
	server_name ${NGINX_HOST} "localhost";
	#listen ${NGINX_PORT};
	listen ${NGINX_PORT} ssl;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /home/${USERNAME}/certs/transcendence.crt;
	ssl_certificate_key /home/${USERNAME}/certs/transcendence.key;

	root /home/${USERNAME}/images/;

	location / {
		try_files $uri @proxy_to_django;
	}

	location @proxy_to_django {
		proxy_pass https://django-backend;

		proxy_redirect off;
		proxy_set_header Host $host:${NGINX_PORT};
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $server_name;
		proxy_set_header X-Forwarded-Proto https;
	}
}

# server pong (ws)
server {
	server_name ${NGINX_HOST} "localhost";
	#listen ${PONG_PORT};
	listen ${PONG_PORT} ssl;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /home/${USERNAME}/certs/transcendence.crt;
	ssl_certificate_key /home/${USERNAME}/certs/transcendence.key;

	root /home/${USERNAME}/pong;

	location / {
		try_files $uri @proxy_to_pong;
	}

	location @proxy_to_pong {
		proxy_pass https://pong-backend;
		
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";	

		proxy_redirect off;
		proxy_set_header Host $host:${PONG_PORT};
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $server_name;
		proxy_set_header X-Forwarded-Proto https;
	}
}

# server chat (ws)
server {
	server_name ${NGINX_HOST} "localhost";
	#listen ${CHAT_PORT};
	listen ${CHAT_PORT} ssl;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /home/${USERNAME}/certs/transcendence.crt;
	ssl_certificate_key /home/${USERNAME}/certs/transcendence.key;

	root /home/${USERNAME}/chat;

	location / {
		try_files $uri @proxy_to_chat;
	}

	location @proxy_to_chat {
		proxy_pass https://chat-backend;
		
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";	

		proxy_redirect off;
		proxy_set_header Host $host:${CHAT_PORT};
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $server_name;
		proxy_set_header X-Forwarded-Proto https;
	}
}

# server ntf (ws)
server {
	server_name ${NGINX_HOST} "localhost";
	#listen ${NTF_PORT};
	listen ${NTF_PORT} ssl;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /home/${USERNAME}/certs/transcendence.crt;
	ssl_certificate_key /home/${USERNAME}/certs/transcendence.key;

	root /home/${USERNAME}/ntf;

	location / {
		try_files $uri @proxy_to_ntf;
	}

	location @proxy_to_ntf {
		proxy_pass https://ntf-backend;
		
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";	

		proxy_redirect off;
		proxy_set_header Host $host:${NTF_PORT};
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $server_name;
		proxy_set_header X-Forwarded-Proto https;
	}
}

